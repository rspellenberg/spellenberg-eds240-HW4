---
Title: "HW 3 Drafting Visualizations"
Name: "Rachel Spellenberg"
Date: "February 24, 2024"
format:
  html:
    embed-resources: true
    code_folding: true
---

**#1 Which option do you plan to pursue?** 
I plan on pursuing Option 2 for HW #4 by creating a infographic on food systems emissions.

**#2 Restate your question(s). Has this changed at all since HW #1? If yes, how so?** 
My question was originally how GHG emissions have changed by country over time. To have a more focused infographic, I have decided to change my question to "who are the top 5 emitters of food systems in 2018." I have decided to add in subquestions about how these 5 countries' emissions have changed over the time of the dataset (1990-2018), what portion of total emissions they are responsible for, and how are their emissions broken up by sector.

**#3 Explain which variables from your data set(s) you will use to answer your question(s).** 
From my datasets, I plan on using these variables:

-   country name
-   year
-   food system stage

I am using two datasets, one from EDGAR that contains GHG emissions by country from 1990-2018 and emissions broken up by food system stage from 1990-2018 and another from the World Bank that contains the population of the five countries I am focusing on in my infographic to be able to use per capita data. After wrangling the data into tidy format, it was ready to use in all my plot types. I made a map using ggplot to add context to my infographic.

**#4 Find at least two data visualizations that you could (potentially) borrow / adapt pieces from.** 

```{r}
knitr::include_graphics("pictures/west-world-matrix_Tanya Shapiro.png")
```
WestWorld Attribute Matrix by Tanya Shapiro: At the bottom of my infographic, I want to include radar plots that show the break down of emissions by food system/sector. I like that this visualization added the photo in the middle and made the radar plot area transparent so you could see through to the gridlines easily. I like the idea of adding in the country shape to the middle of the plot to help readers match it to the country on top of using the same color scheme throughout. 

```{r}
knitr::include_graphics("pictures/2021_27_AnimalRescues_CedricScherer.png")
```
Animal Rescue by Cedric Scherer: Instead of the pie chart for total food system emissions in 2018, I think it could look nice to use the bar chart within a bar chart used in this infographic. The large bar would be total world emissions and then the little bar would be the country of focus or "rest of the world"

**#5 Hand-draw your anticipated three visualizations (option 1) or infographic (option 2)**
note: the text ideas are for total emissions, not per capita and would need to be updated
```{r}
knitr::include_graphics("pictures/infographic_draft.jpg")
```

```{r, warning=FALSE, message=FALSE}
# loading packages ----
library(tidyverse)
library(janitor)
library(here)
library(maps)
library(fmsb)

# read in data ----
food_emissions_raw <- read_csv(here("data/EDGAR-FOOD_v6_GHG FOOD system emi.csv"))

population_raw <- read_csv(here("data/population-data-worldbank.csv"))

food_sector_emissions_raw <- read_csv(here("data/EDGAR-FOOD_v6_FOOD emi by sector .csv"), skip = 3)
```

```{r, warning=FALSE, message=FALSE}
# data wrangling ----------

# tidying up EDGAR dataset for food emissions by country 1990-2018 ----

food_emissions <- food_emissions_raw %>% 
  
  # snake case column headers
  clean_names() %>% 
  
  # tidy up!
  pivot_longer(cols = 3:31,
               names_to = "year",
               values_to = "emissions_kt_co2e") %>% 
  
  # removing country code variable
  select(-country_code_a3) %>% 
  
  # rename first first column
  rename(country = name) %>% 
  
  # remove y_ from each observation and change class to numeric
  mutate(year = as.numeric(str_remove_all(year, "y_"))) %>% 
  
  # round the values in the emissions_kt_co2e column
  mutate(emissions_kt_co2e = round(emissions_kt_co2e, 2)) %>% 
  
  # filtering for 5 top emitters (by total emissions)
  filter(country == "China" | country == "Brazil" | country == "United States" | country == "India" | country == "Indonesia") %>% 
  
  # add in data for the rest of the world's population and emissions in 2018
  add_row(country = "rest of the world", year = 2018, emissions_kt_co2e = 9270996) %>% 
  
  # factor the countries and 'rest of the world' for coloring in plots
   mutate(country = factor(country, levels = c("China", "Brazil", "United States", "India", "Indonesia", "rest of the world")))

# tidying population dataset from World Bank to use for per capita calculations ----

population <- population_raw %>% 
  
  #snake case column headers
  clean_names() %>% 
  
  # selecting desired columns
  select(country_name, 5:29) %>% 
  
  # rename column name to 'country'
  rename(country = country_name) %>% 
  
  # tidy up!
  pivot_longer(cols = 2:26,
               names_to = "year",
               values_to = "population") %>% 
  
  # clean up year variable to be YYYY format and change to numeric
  mutate(year = as.numeric(substr(year, 9, 12))) %>% 

  # add observation to include population of the rest of the world beyond the 5 countries highlighted in the infographic
 add_row(country = "rest of the world", year = 2018, population = 4107954888)


# creating df for plots that include per capita data ------------

# joining population and food system data into one df
per_capita_emissions <- merge(food_emissions, population, by = c("country", "year"), all.x = TRUE) %>%

# adding per capita emissions
mutate(per_capita_emissions = emissions_kt_co2e/population)


# tidying EDGAR food emissions by sector data for radar plots ----------

food_sector_emi <- food_sector_emissions_raw %>% 
  
  clean_names() %>% 
  
  select(name, dev_country, food_system_stage, 7:35) %>% 
  
  rename(country = name) %>% 
  
  # tidy up!
  pivot_longer(cols = 4:32,
               names_to = "year",
               values_to = "emissions") %>% 
  
   # remove y_ from each observation and change class to numeric
  mutate(year = as.numeric(str_remove_all(year, "y_"))) %>% 
  
  mutate(emissions = as.numeric(emissions)) %>% 
  
  filter(year == 2018) %>% 
  
  filter(country == "China" |
         country == "Brazil" |
         country == "United States" |
         country == "India" |
         country == "Indonesia") %>% 

  group_by(country, food_system_stage) %>%

  summarize(total_emissions = sum(emissions))


# df for China radarplot -----

# adding in 0 for minimum in radarplot -----
china_cons_0 <- data.frame(food_system_stage = "Consumption", total_emissions = 0)
china_eol_0 <- data.frame(food_system_stage = "End_of_Life", total_emissions = 0)
china_luluc_0 <- data.frame(food_system_stage = "LULUC (Production)", total_emissions = 0)
china_pack_0 <- data.frame(food_system_stage = "Packaging", total_emissions = 0)
china_proc_0 <- data.frame(food_system_stage = "Processing", total_emissions = 0)
china_prod_0 <- data.frame(food_system_stage = "Production", total_emissions = 0)
china_retail_0 <- data.frame(food_system_stage = "Retail", total_emissions = 0)
china_trans_0 <- data.frame(food_system_stage = "Transport", total_emissions = 0)

china_radar_0 <- rbind(china_cons_0, china_eol_0, china_luluc_0, china_pack_0, china_proc_0, china_prod_0, china_retail_0, china_trans_0) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)

# adding in 1,150,000 for max in radarplot -----
china_cons_max <- data.frame(food_system_stage = "Consumption", total_emissions = 1150000)
china_eol_max <- data.frame(food_system_stage = "End_of_Life", total_emissions = 1150000)
china_luluc_max <- data.frame(food_system_stage = "LULUC (Production)", total_emissions = 1150000)
china_pack_max <- data.frame(food_system_stage = "Packaging", total_emissions = 1150000)
china_proc_max <- data.frame(food_system_stage = "Processing", total_emissions = 1150000)
china_prod_max <- data.frame(food_system_stage = "Production", total_emissions = 1150000)
china_retail_max <- data.frame(food_system_stage = "Retail", total_emissions = 1150000)
china_trans_max <- data.frame(food_system_stage = "Transport", total_emissions = 1150000)

china_radar_max <- rbind(china_cons_max, china_eol_max, china_luluc_max, china_pack_max, china_proc_max, china_prod_max, china_retail_max, china_trans_max) %>% 
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)

# combining for radarplot df -----
china_radar <- food_sector_emi %>% 
  
  filter(country == "China") %>% 
  
  subset(select = -country) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)
  

china_radar_final <- rbind(china_radar_max, china_radar_0, china_radar)
  


# df for Brazil radarplot -----

# adding in 0 for minimum in radarplot -----
brazil_cons_0 <- data.frame(food_system_stage = "Consumption", total_emissions = 0)
brazil_eol_0 <- data.frame(food_system_stage = "End_of_Life", total_emissions = 0)
brazil_luluc_0 <- data.frame(food_system_stage = "LULUC (Production)", total_emissions = 0)
brazil_pack_0 <- data.frame(food_system_stage = "Packaging", total_emissions = 0)
brazil_proc_0 <- data.frame(food_system_stage = "Processing", total_emissions = 0)
brazil_prod_0 <- data.frame(food_system_stage = "Production", total_emissions = 0)
brazil_retail_0 <- data.frame(food_system_stage = "Retail", total_emissions = 0)
brazil_trans_0 <- data.frame(food_system_stage = "Transport", total_emissions = 0)

brazil_radar_0 <- rbind(brazil_cons_0, brazil_eol_0, brazil_luluc_0, brazil_pack_0, brazil_proc_0, brazil_prod_0, brazil_retail_0, brazil_trans_0) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)

# adding in 1,150,000 for max in radarplot -----
brazil_cons_max <- data.frame(food_system_stage = "Consumption", total_emissions = 1150000)
brazil_eol_max <- data.frame(food_system_stage = "End_of_Life", total_emissions = 1150000)
brazil_luluc_max <- data.frame(food_system_stage = "LULUC (Production)", total_emissions = 1150000)
brazil_pack_max <- data.frame(food_system_stage = "Packaging", total_emissions = 1150000)
brazil_proc_max <- data.frame(food_system_stage = "Processing", total_emissions = 1150000)
brazil_prod_max <- data.frame(food_system_stage = "Production", total_emissions = 1150000)
brazil_retail_max <- data.frame(food_system_stage = "Retail", total_emissions = 1150000)
brazil_trans_max <- data.frame(food_system_stage = "Transport", total_emissions = 1150000)

brazil_radar_max <- rbind(brazil_cons_max, brazil_eol_max, brazil_luluc_max, brazil_pack_max, brazil_proc_max, brazil_prod_max, brazil_retail_max, brazil_trans_max) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)

# combining for radarplot df -----
brazil_radar <- food_sector_emi %>% 
  
  filter(country == "Brazil") %>% 
  
  subset(select = -country) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)
  

brazil_radar_final <- rbind(brazil_radar_max, brazil_radar_0, brazil_radar) 

  
# df for United States radarplot ----

# adding in 0 for minimum in radarplot -----
us_cons_0 <- data.frame(food_system_stage = "Consumption", total_emissions = 0)
us_eol_0 <- data.frame(food_system_stage = "End_of_Life", total_emissions = 0)
us_luluc_0 <- data.frame(food_system_stage = "LULUC (Production)", total_emissions = 0)
us_pack_0 <- data.frame(food_system_stage = "Packaging", total_emissions = 0)
us_proc_0 <- data.frame(food_system_stage = "Processing", total_emissions = 0)
us_prod_0 <- data.frame(food_system_stage = "Production", total_emissions = 0)
us_retail_0 <- data.frame(food_system_stage = "Retail", total_emissions = 0)
us_trans_0 <- data.frame(food_system_stage = "Transport", total_emissions = 0)

us_radar_0 <- rbind(us_cons_0, us_eol_0, us_luluc_0, us_pack_0, us_proc_0, us_prod_0, us_retail_0, us_trans_0) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)

# adding in 1,150,000 for max in radarplot -----
us_cons_max <- data.frame(food_system_stage = "Consumption", total_emissions = 1150000)
us_eol_max <- data.frame(food_system_stage = "End_of_Life", total_emissions = 1150000)
us_luluc_max <- data.frame(food_system_stage = "LULUC (Production)", total_emissions = 1150000)
us_pack_max <- data.frame(food_system_stage = "Packaging", total_emissions = 1150000)
us_proc_max <- data.frame(food_system_stage = "Processing", total_emissions = 1150000)
us_prod_max <- data.frame(food_system_stage = "Production", total_emissions = 1150000)
us_retail_max <- data.frame(food_system_stage = "Retail", total_emissions = 1150000)
us_trans_max <- data.frame(food_system_stage = "Transport", total_emissions = 1150000)

us_radar_max <- rbind(us_cons_max, us_eol_max, us_luluc_max, us_pack_max, us_proc_max, us_prod_max, us_retail_max, us_trans_max) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)

# combining for radarplot df -----
us_radar <- food_sector_emi %>% 
  
  filter(country == "United States") %>% 
  
  subset(select = -country) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions) %>% 
  
  mutate("LULUC (Production)" = 0)
  

us_radar_final <- rbind(us_radar_max, us_radar_0, us_radar) 


# df for India radarplot ----

india_cons_0 <- data.frame(food_system_stage = "Consumption", total_emissions = 0)
india_eol_0 <- data.frame(food_system_stage = "End_of_Life", total_emissions = 0)
india_luluc_0 <- data.frame(food_system_stage = "LULUC (Production)", total_emissions = 0)
india_pack_0 <- data.frame(food_system_stage = "Packaging", total_emissions = 0)
india_proc_0 <- data.frame(food_system_stage = "Processing", total_emissions = 0)
india_prod_0 <- data.frame(food_system_stage = "Production", total_emissions = 0)
india_retail_0 <- data.frame(food_system_stage = "Retail", total_emissions = 0)
india_trans_0 <- data.frame(food_system_stage = "Transport", total_emissions = 0)

india_radar_0 <- rbind(india_cons_0, india_eol_0, india_luluc_0, india_pack_0, india_proc_0, india_prod_0, india_retail_0, india_trans_0) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)

# adding in 1,150,000 for max in radarplot -----
india_cons_max <- data.frame(food_system_stage = "Consumption", total_emissions = 1150000)
india_eol_max <- data.frame(food_system_stage = "End_of_Life", total_emissions = 1150000)
india_luluc_max <- data.frame(food_system_stage = "LULUC (Production)", total_emissions = 1150000)
india_pack_max <- data.frame(food_system_stage = "Packaging", total_emissions = 1150000)
india_proc_max <- data.frame(food_system_stage = "Processing", total_emissions = 1150000)
india_prod_max <- data.frame(food_system_stage = "Production", total_emissions = 1150000)
india_retail_max <- data.frame(food_system_stage = "Retail", total_emissions = 1150000)
india_trans_max <- data.frame(food_system_stage = "Transport", total_emissions = 1150000)

india_radar_max <- rbind(india_cons_max, india_eol_max, india_luluc_max, india_pack_max, india_proc_max, india_prod_max, india_retail_max, india_trans_max) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)

# combining for radarplot df -----
india_radar <- food_sector_emi %>% 
  
  filter(country == "India") %>% 
  
  subset(select = -country) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)
  

india_radar_final <- rbind(india_radar_max, india_radar_0, india_radar) 


# df for Indonesia radarplot ----

ind_cons_0 <- data.frame(food_system_stage = "Consumption", total_emissions = 0)
ind_eol_0 <- data.frame(food_system_stage = "End_of_Life", total_emissions = 0)
ind_luluc_0 <- data.frame(food_system_stage = "LULUC (Production)", total_emissions = 0)
ind_pack_0 <- data.frame(food_system_stage = "Packaging", total_emissions = 0)
ind_proc_0 <- data.frame(food_system_stage = "Processing", total_emissions = 0)
ind_prod_0 <- data.frame(food_system_stage = "Production", total_emissions = 0)
ind_retail_0 <- data.frame(food_system_stage = "Retail", total_emissions = 0)
ind_trans_0 <- data.frame(food_system_stage = "Transport", total_emissions = 0)

ind_radar_0 <- rbind(ind_cons_0, ind_eol_0, ind_luluc_0, ind_pack_0, ind_proc_0, ind_prod_0, ind_retail_0, ind_trans_0) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)

# adding in 1,150,000 for max in radarplot -----
ind_cons_max <- data.frame(food_system_stage = "Consumption", total_emissions = 1150000)
ind_eol_max <- data.frame(food_system_stage = "End_of_Life", total_emissions = 1150000)
ind_luluc_max <- data.frame(food_system_stage = "LULUC (Production)", total_emissions = 1150000)
ind_pack_max <- data.frame(food_system_stage = "Packaging", total_emissions = 1150000)
ind_proc_max <- data.frame(food_system_stage = "Processing", total_emissions = 1150000)
ind_prod_max <- data.frame(food_system_stage = "Production", total_emissions = 1150000)
ind_retail_max <- data.frame(food_system_stage = "Retail", total_emissions = 1150000)
ind_trans_max <- data.frame(food_system_stage = "Transport", total_emissions = 1150000)

ind_radar_max <- rbind(ind_cons_max, ind_eol_max, ind_luluc_max, ind_pack_max, ind_proc_max, ind_prod_max, ind_retail_max, ind_trans_max) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)

# combining for radarplot df -----
ind_radar <- food_sector_emi %>% 
  
  filter(country == "Indonesia") %>% 
  
  subset(select = -country) %>% 
  
  pivot_wider(names_from = food_system_stage,
              values_from = total_emissions)
  

ind_radar_final <- rbind(ind_radar_max, ind_radar_0, ind_radar) 

  
```

```{r, warning=FALSE, message=FALSE}
# plots ----------

# creating theme for all plots
my_pal <- c("China" = "#481567FF",
            "Brazil" = "#404788FF", 
            "United States" = "#33638DFF",
            "India" = "#29AF7FFF", 
            "Indonesia" = "#95D840FF", 
            "rest of the world" = "gray80")


# pie chart for total food system emissions in 2018 ------------
piechart_prep <- food_emissions %>% 
  
  # filtering for 2018
  filter(year == 2018) %>% 
  
  # remove year column from df
  select(-year)
  
piechart <- ggplot(piechart_prep, mapping = aes(x = "", y = emissions_kt_co2e, fill = country)) +
    
    geom_bar(stat = "identity", width = 1, color = "white") +
    
    coord_polar("y", start = 0) +
  
  scale_fill_manual(values = my_pal) +
  
  labs(title = "Total Food System Emissions in 2018") +
  
  theme(legend.position = "none",
        panel.background = element_blank(),
        axis.title = element_blank(),
        axis.text = element_blank())
  
# not including labels for countries because the colors will be uniform throughout infographic

piechart


# bar chart for per capita emissions in 2018 ------------
per_capita_plot <- per_capita_emissions %>% 
  
  filter(year == 2018) %>% 

  ggplot() +

  geom_col(aes(x = reorder(country, -per_capita_emissions), y = per_capita_emissions), fill = my_pal) +
  
  labs(title = "Per Capita Emissions in 2018",
       y = "kt Co2e") +
  
  theme(panel.background = element_blank(),
        axis.title.x = element_blank())

# struggling with getting the correct colors and countries matched up. Once I get that, I will remove x axis titles

per_capita_plot


# map for center of infographic (for final assignment I want to color code countries to match plots) -----------
### code for building map in ggplot from Sarah Penir; edited to fit aesthetic for infographic

# creating a map for the center of my infographic -------------

# creating df for map -----
world <- map_data("world") %>% 
  
  select(-subregion) %>% 
  
  # creating new column for the countries I want to highlight on my map
  mutate(map = case_when(
    region == "China" ~ "China",
    region == "Brazil" ~ "Brazil",
    region == "USA" ~ "United States",
    region == "India" ~ "India",
    region == "Indonesia" ~ "Indonesia"))

# creating df for all countries I'm NOT highlighting in my map  
world_filtered_rotw <- world %>% 
  
  filter(region != "China") %>%
  filter(region != "Brazil") %>% 
  filter(region != "USA") %>% 
  filter(region != "India") %>% 
  filter(region != "Indonesia") %>% 
  
  # populating column with "rest of the world" to be able to match gray to the rest of my infographic
  mutate(map = "rest of the world")

# creating df with the 5 countries I'm highlighting in my map/infographic 
world_filtered_top5 <- world %>% 
  
  filter(map == "China" |
         map == "Brazil" |
         map == "United States" |
         map == "India" | 
         map == "Indonesia")

# joining together 2 dfs so that map column has been fully populated with the 6 categories I have colors for
world_final <- full_join(world_filtered_top5, world_filtered_rotw)

# map viz
map <- ggplot() +
  
  geom_polygon(data = world_final, aes(x=long, y = lat, group = group, fill = map)) + 
  
  scale_fill_manual(values = my_pal) +
  
  coord_fixed(1.3) +
  
  #get rid of axes and background
  theme_void() +
  
  theme(legend.position = "none")

map


# line graphs for per capita emissions over time ------------
### I would like to get an opinion whether it will be more valuable to show total emissions or per capita for the scatter plots

china <- per_capita_emissions %>% 
  
  # filtering for China
  filter(country == "China") %>% 
  
  ggplot(china_time, mapping = aes(x = year, y = per_capita_emissions)) +
  
  geom_point(color = "#481567FF") +
  
  geom_smooth(method = "lm", se = FALSE, color = "#481567FF") +
  
  # adjusting tick marks/labels on the x-axis
  scale_x_continuous(n.breaks = (10)) +
  
  labs(title = "China",
       y = "kt CO2e per capita") +
  
  theme_classic() +
  
  theme(axis.title.x = element_blank())
  
china
  

brazil <- per_capita_emissions %>% 
  
  filter(country == "Brazil") %>% 
  
  ggplot(china_time, mapping = aes(x = year, y = per_capita_emissions)) +
  
  geom_point(color = "#404788FF") +
  
  geom_smooth(method = "lm", se = FALSE, color = "#404788FF") +
  
  scale_x_continuous(n.breaks = (10)) +
  
  labs(title = "Brazil",
       y = "kt CO2e per capita") +
  
  theme_classic() +
  
  theme(axis.title.x = element_blank())
  
brazil

us <- per_capita_emissions %>% 
  
  filter(country == "United States") %>% 
  
  ggplot(china_time, mapping = aes(x = year, y = per_capita_emissions)) +
  
  geom_point(color = "#33638DFF") +
  
  geom_smooth(method = "lm", se = FALSE, color = "#33638DFF") +
  
  scale_x_continuous(n.breaks = (10)) +
  
  labs(title = "United States",
       y = "kt CO2e per capita") +
  
  theme_classic() +
  
  theme(axis.title.x = element_blank())
  
us

india <- per_capita_emissions %>% 
  
  filter(country == "India") %>% 
  
  ggplot(china_time, mapping = aes(x = year, y = per_capita_emissions)) +
  
  geom_point(color = "#29AF7FFF") +
  
  geom_smooth(method = "lm", se = FALSE, color = "#29AF7FFF") +
  
  scale_x_continuous(n.breaks = (10)) +
  
  labs(title = "India",
       y = "kt CO2e per capita") +
  
  theme_classic() +
  
  theme(axis.title.x = element_blank())
  
india

indonesia <- per_capita_emissions %>% 
  
  filter(country == "Indonesia") %>% 
  
  ggplot(china_time, mapping = aes(x = year, y = per_capita_emissions)) +
  
  geom_point(color = "#95D840FF") +
  
  geom_smooth(method = "lm", se = FALSE, color = "#95D840FF") +
  
  scale_x_continuous(n.breaks = (10)) +
  
  labs(title = "Indonesia",
       y = "kt CO2e per capita") +
  
  theme_classic() +
  
  theme(axis.title.x = element_blank())
  
indonesia
```

```{r}
# radar plots --------------

# China radar plot ------
radarchart(china_radar_final, pcol = "#481567FF", pfcol = scales::alpha("#481567FF", 0.75), plwd = 2, plty = 1,
           
           # customize the grid
           cglcol = "gray", cglty = 1, cglwd = 0.8,
           
           # customize the axes
           axislabcol = "gray",
           
           #variable labels
           vlcex = 0.7, vlabels = colnames(china_radar_final), caxislabels = NULL, title = "China")

# Brazil radar plot ------
radarchart(brazil_radar_final, pcol = "#404788FF", pfcol = scales::alpha("#404788FF", 0.75), plwd = 2, plty = 1,
           
           # customize the grid
           cglcol = "gray", cglty = 1, cglwd = 0.8,
           
           # customize the axes
           axislabcol = "gray",
           
           #variable labels
           vlcex = 0.7, vlabels = colnames(brazil_radar_final), caxislabels = NULL, title = "Brazil")

# United States radar plot ------
radarchart(us_radar_final, pcol = "#33638DFF", pfcol = scales::alpha("#33638DFF", 0.75), plwd = 2, plty = 1,
           
           # customize the grid
           cglcol = "gray", cglty = 1, cglwd = 0.8,
           
           # customize the axes
           axislabcol = "gray",
           
           #variable labels
           vlcex = 0.7, vlabels = colnames(us_radar_final), caxislabels = NULL, title = "United States")

# India radar plot ------
radarchart(india_radar_final, pcol = "#29AF7FFF", pfcol = scales::alpha("#29AF7FFF", 0.75), plwd = 2, plty = 1,
           
           # customize the grid
           cglcol = "gray", cglty = 1, cglwd = 0.8,
           
           # customize the axes
           axislabcol = "gray",
           
           #variable labels
           vlcex = 0.7, vlabels = colnames(india_radar_final), caxislabels = NULL, title = "India")

# Indonesia radar plot ------
radarchart(ind_radar_final, pcol = "#95D840FF", pfcol = scales::alpha("#95D840FF", 0.75), plwd = 2, plty = 1,
           
           # customize the grid
           cglcol = "gray", cglty = 1, cglwd = 0.8,
           
           # customize the axes
           axislabcol = "gray",
           
           #variable labels
           vlcex = 0.7, vlabels = colnames(ind_radar_final), caxislabels = NULL, title = "Indonesia")
```


**#6 What challenges did you encounter or anticipate encountering as you continue to build / iterate on your visualizations in R?** 
There have been multiple challenges! I am having a hard time getting my colors to be consistent on my bar chart. I am also finding it difficult to decide when to use per capita data and when to use total emissions data. I was unable to add my radar plots, but anticipate those to be difficult to format correctly.

**#7 What ggplot extension tools / packages do you need to use to build your visualizations? Are there any that we haven’t covered in class that you’ll be learning how to use for your visualizations?**
So far I have been using packages that we have covered in class. However, I will need to dig deeper into understanding how to manipulate the map colors to match my aesthetic.

**#8 What feedback do you need from the instructional team and / or your peers to ensure that your intended message is clear?**
I think the biggest feedback I need is whether to use per capita data for my scatterplots or total emissions data. I was thinking of using both and having two y-axes, but not sure if that is too much information for little gain.
